apiVersion: v1
kind: Namespace
metadata:
  name: crud-app

apiVersion: v1
kind: Secret
metadata:
 name: db-password
 namespace: crud-app
type: Opaque
data:
 password: QXAwMHJQYSQkdzByZCE=

---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: db-deploy
 namespace: crud-app
spec:
 replicas: 1
 selector:
   matchLabels:
     app: db
 template:
   metadata:
     labels:
       app: db
   spec:
     volumes: 
      - name: pg-data 
        persistentVolumeClaim:
          claimName: db-vol-claim
     containers:
     - name: db
       image: postgres:16
       volumeMounts: 
        - name: pg-data 
          mountPath: /var/lib/postgresql/data
       env:
       - name: POSTGRES_DB
         value: postgres
       - name: POSTGRES_USER
         value: postgres
       - name: POSTGRES_PASSWORD
         valueFrom:
           secretKeyRef:
             name: db-password
             key: password
       ports:
       - containerPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: db-svc
  namespace: crud-app
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: backend-deploy
 namespace: crud-app
spec:
 replicas: 1
 selector:
   matchLabels:
     app: backend
 template:
   metadata:
     labels:
       app: backend
   spec:
     containers:
     - name: backend
       imagePullPolicy: IfNotPresent
       image: final_assignment-backend
       env:
       - name: db_address
         value: db-svc
       - name: db_username
         value: postgres
       - name: db_name
         value: postgres
       - name: db_password
         valueFrom:
           secretKeyRef:
             name: db-password
             key: password
       ports:
       - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: backend-api
  namespace: crud-app
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-volume
  namespace: crud-app
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /mnt/data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-vol-claim
  namespace: crud-app
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
  storageClassName: manual